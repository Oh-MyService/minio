name: Deploy FastAPI to Amazon Lightsail

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  LIGHTSAIL_INSTANCE_IP: ${{ secrets.LIGHTSAIL_INSTANCE_IP }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push FastAPI image to Amazon ECR Public
      id: build-minio-image
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: d0v2k3o3
        REPOSITORY: ohmyservice_minio
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --no-cache -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
        echo "ai_image=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install SSH and sshpass
      run: sudo apt-get install -y openssh-client sshpass

    - name: Deploy to Amazon Lightsail using sshpass
      env:
        AI_IMAGE: ${{ steps.build-fastapi-image.outputs.ai_image }}
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$LIGHTSAIL_INSTANCE_IP << EOF
          AI_IMAGE=${AI_IMAGE}
          
          # Pull the images
          sudo docker pull \\$AI_IMAGE
          
          # Stop and remove existing containers
          sudo docker stop minio_container || true
          sudo docker rm minio_container || true
          
          # Run new container
          sudo docker run -d --privileged --shm-size=32g --ulimit memlock=-1 --ulimit stack=67108864 --gpus all --name ai_app -p 27272:8000 \\$AI_IMAGE
        EOF
